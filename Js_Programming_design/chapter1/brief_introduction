1.js最初是用来进行客户端验证
2.目前具有了与浏览器窗口及其内容等几乎所有方面的交互能力。
3.
  3.1 能够处理复杂的交互和计算
  3.2 拥有了闭包
  3.3 匿名函数（拉姆达）
  3.4 元编程
4.兼容
  4.1 跨浏览器
  4.2 手机浏览器
  4.3 为残障人士，屏幕阅读器
5.
  js：核心：ECMAScript
        5.1.1
          语法
          类型
          语句
          关键字
          保留字
          操作符
          对象
      文档对象模型：DOM： dom核心，html－dom，css－dom
        5.1.2
          利用ECMAScript的核心类型和语法提供更多更具体的功能。
      浏览器对象模型：BOM
6.浏览器只是ECMAScript实现可能的宿主环境之一，不仅提供基本的ECMAScript实现，同时也会提供该语言的扩展（dom），以便语言与环境之间对接交互。
  包括： adobe flash，node，浏览器
7.
  ECMAScript描述的所有类型，值，对象，属性，函数以及程序句法和语义
  支持Unicode字符标准
  添加ECMAScript没有描述的 更多类型，值，对象，属性和函数
  支持没有定义的 程序和正则表达式语法
8.
  dom把整个层次映射为一个多层次的节点结构
  dom提供api：删除，添加，替换，修改任何节点
9.
  9.1 dom一级：dom核心＋dom html
    9.1.1 dom核心 ： 如何映射基于xml的文档结构，以便简化对文档任意部分的访问和操作。
    9.1.2 dom html ：在dom核心的基础上加以扩展，添加了针对html的对象和方法。
  9.2 dom二级 ： 扩充了鼠标和用户界面事件，范围，遍历（层叠dom的方法），通过对象接口增加了对css的支持，扩展了dom1级核心模块，开始支持xml命名空间。
    9.2.1 dom视图：
    9.2.2 dom事件
    9.2.3 dom样式
    9.2.4 dom遍历和范围
  9.3 dom三级，
    9.3.1 引入了统一方式加载和保存文档的方法
    9.3.2 新增了验证文档的方法
    9.3.3 在dom核心中进行了扩展，开始支持xml 1.0规范，涉及xml infoset，xpath， xml base
