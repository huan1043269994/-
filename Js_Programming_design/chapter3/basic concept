//巍哥注： 截止2016年10月7日下午3点43分47秒，ECMAScript5的标准仍然没有被完全实现。
1.语法
  1.1 区分大小写
  1.2 驼峰式标志符（最佳实践）
  1.3 注释
  1.4 严格模式：不同的解析和执行模型 顶部: "use strict";
  1.5 语句：始终使用代码块
        if(){
        } else {
        }    //不管是不是有转折条件
  1.6 关键字（break等的）和保留字（int等的），使用关键字做标志符会抛出 "Identifier Expected"错误，保留字就不一定。eval和arguements也施加了限制。
  1.7 变量：弱类型，松散类型。全局变量很难维护，所以建议申明变量一定要加var（strict模式下会抛出错误），换行和缩进为了最佳实践
2.数据类型
  2.1 Undefined,Null,Boolean,Number,String（基本数据类型）－typeof检测     Object(复杂数据类型）－instanceof检测
    2.1.1 typeof是操作符，圆括号可以使用但是不是必须。 操作数：变量或数值字面量
    2.1.2 function应该是一种Object不是一种数据类型，但是存在特别的地方，所以有必要用typeof区别开
    2.1.3 null是一个空的对象引用。
  2.2 ECMAScript不支持创建自定义类型，只存在上述6种类型。
  2.3 具有动态性
  2.4 undefined（类型，字面量），变量定义未初始化，未初始化和未申明的变量经过typeof都是undefined，所以显示赋值undefined给变量，我们typeof显示的
  undefined就是未申明的变量咯
  2.5 null空对象引用，一般申明对象而没赋值，可以赋予null标识。但是undefined是派生自null的，所以相等性测试会返回true
  2.6 Boolean是bool的时候就应该是它，不应该让它隐式转换
  2.7 Number数值字面量， 八进制，十六进制表示最终转换十进制，
    2.7.1 因为数据格式，所以浮点数会存在一定误差（所以不要期望 0.1 + 0.3 = 0.4可能会有一定的舍入误差）
    2.7.2 因为浮点数占用的存储空间是整数的两倍，所以js会不失时机地转换为整数
    2.7.3 大数值或者特别小的数值用科学技术法表示
    2.7.4 js保存数值限制： Number.MIN_VALUE, Number.MAX_VALUE, Infinity,-Infinity, isFinite(),Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY
    2.7.5 NaN与任何值都不想等，包括自己，涉及任何NaN的操作(NaN/10)都会返回NaN, isNaN()测试，在ECMAScript中，任何数除以0都会返回NaN,但实际上
      只有0/0 - NaN,其他的返回(+/-)Infinity.
    2.7.6 isNaN()也适用于对象，先调用ValueOf()如果不能，再调用toString(),这也是内置函数和操作符执行的一般流程。
    2.7.7 数值转换：Number(), parseInt(), parseFloat()
      2.7.7.1 parseInt()更适合转换成整数
      2.7.7.2 parseFloat() 只解析十进制的数，
 2.8 String()类型，一个字符是由16位Unicode字符组成的，双字节字符。销毁和创建字符串填充变量（改变变量的保存的字符串）
  2.8.1 拼接字符串需要一个过程: c = a + b, 先创建一个能容纳a和b长度和的变量c，然后把a和b填充进去，最后销毁字符串a和b，所以老版本的字符串拼接会很慢
  2.8.2 出了undefined和null没有toString()方法外，其余的都有
  2.8.3 String()方法能将任何类型的转成字符串
 2.9 Object复杂数据类型。一种数据和功能的集合。
  2.9.1 Object是所有其他对象的实例的基础。但是宿主实现和提供和定义的宿主对象：dom和bom就不一定适用于ECMAScript的对象行为。
  2.9.2 var o = new Object(),然后添加属性和方法就可以自定义对象咯。
  2.9.3 属性p35
 2.10 操作符：能操作字符串，数字值，布尔值，甚至对象
3.流控制语句
  3.1 with 会导致性能下降，调试困难
  3.2 switch语句会很快
    case后的不一定是常量，也可以是变量，甚至是表达式，使用全等操作符。
4.函数
  全部返回值或者永远不返回值，给调试带来方便
  无重载：但是可以通过检验参数个数和类型实现一定意义d上的重载
  arguments和命名参数不会访问相同的内存空间，但是值会同步。
  没有传递值的命名参数将自动被赋予undefined，是通过值传递参数
  没有函数签名就没有重载
  无需指定返回值，可以在任何时候返回任何值（棒）
  实际上，未指定返回值的函数返回的是一个特殊的 undefined
  
5.语法＋数据类型＋操作符＋内置功能等用于构建复杂解决方案的基本概念
jiehsu
