1.
  进程：运行的程序
    1.判断服务器健康状态
      1.进程查看
        ps  pstree
          1.ps aux
            #查看系统所有的进程，使用BSD操作系统格式
            ps -le
            #同上，使用Linux标准命令格式
            
              -a:显示一个终端的所有进程，除了会话引线
              -u:显示进程的归属用户及内存的使用情况
              -x:显示没有控制的终端的进程
              -l:长格式显示，显示更加详细的信息
              -e:显示所有进程，-A左右一样
      USER：用户
      PID：进程ID号
      %CPU:占用的cpu
      %MEM:占用的内存
      VSZ:该进程占用虚拟内存的大小kb
      RSS：该进程占用实际物理内存的大小kb
      TTY：该进程在那个终端运行
      tty1 - tty6:本地控制台终端
      tty7：本地终端图形界面
      pts/0-255:代表虚拟终端  标“ ？ ”是内核直接启动的
      SATA:进程状态，常见的状态有：
        R:运行
        S：睡眠
        T：停止状态
        s：包含子进程
        +：位于后台
      START：进程启动的时间
      TIME:进程耗费CPU运行时间，用得越久
      COMMAND：进程
      
  pstree
    -p:同时显示进程号
    2.查看系统中所有进程
      top：每三秒刷新一次
        选项:
            -d:秒数  ：默认每三秒刷新一次资源
            -b:使用批处理模式输出 -n:合用
            -n:次数与-b合用。、
            top -b -n 1 > top.log
            刷新一次，然后写入top.log中查看
        在top命令的交互模式当中可以执行的命令
          ?或h：显示交互模式的帮助
          P：以cpu使用率排序，默认此选项
          M：以内存使用率排序
          N：以PID排序
          q：退出top
        PR NI:进程的优先级
        VIRT:虚拟内存
        RES：真实内存
    3.追求无故障率，虽然可以持续很久，
    3.杀死进程
      kill -l:查看kill信号，杀死进程是由信号决定的  kill + PID号
        杀死单一进程
        kill -1/-HUP 进程号，重启这个进程，不改变登录用户
        #重启进程
        kill -9 2236
        #强制杀死进程
      killall [选项][信号] 进程名
      #按照进程名杀死进程，杀死一类进程
      -i:交互式，询问是否杀死某个进程
      -I:忽略进程名的大小
      pkill
        #按照进程名终止进程
        -t 终端号：按照终端号踢出用户
        w：查看本机已经登录的用户
        pkill -9 -t  pts/1
        #强制杀死从pt/1虚拟终端运行的进程
        pkill -t -9 
      修改配置文件了，不建议重启restart，应该会stop。start
    load average:0.00 0.00 0.00   系统前 15 5 1分钟的平均负载
                第一个值：双核不应该大于2,四核不应该大于4
    zombie：僵尸进程，如果不是0,需要手工检查僵尸进程，卡住了，出现了，先等一段时间看是否消失，然后查找一下。
    缓冲：buffer，加速写入
    缓存：cached，加速读取
    源码包不建议restart
    
    
2.修改进程的优先级
  Linux多用户，多任务操作系统
  一次只能运算一个指令，进程优先级决定了每个进程处理的先后顺序
  ps -le
  PRI:进程优先级
  NI:代表Nice
  都是代表优先级，数字越小优先级越高，只能修改NI，但是最后生效的优先级是PRI+NI。
  NI：
    范围：-20到19
    普通用户只能调整NI值的范围：0-19,而且只能调整自己的进程
    普通用户竟然只能调高，而不能降低，
    root用户才能设定进程NI值为负值，而且可以调整任何用户进程
    PRI（最终）=PRI（原始）+NI
    用户只能修改NI不能修改PRI
  nice
  #nice可以给新执行的命令直接赋予NI值，单私不能修改已经存在进程的NI值
    -n NI值：给命令赋予NI值
    nice -n -5 service httpd start
  renice [优先级] PID
  #修改某一个已经存在的进程的优先级
  renice -10 2236
  #但是呢，修改进程只对内核管理和嵌入式开发的人有一定的意义，对普通用户来说基本上没有意义。
