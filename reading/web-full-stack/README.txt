1.full-stack:全栈，一系列技术的集合:web,app,原生应用
2.跨界
3.web开发流程（任何）：产品经理－交互设计－视觉设计－前端开发＋后台开发－测试－发布
4.前端：html+css+js,性能+性能优化，语义化，多浏览器兼容，seo，自动化工具，检测，多种框架＋响应式开发页面 。
5.linux运维工程师，测试工程师
6.流水线：甘特图。组件，容错能力，返错能力，兼容性，可靠性，可用性，可控制，质量可评估，可管理性。
7.http协议通用性，一套后台技术，可以为所有的前端展现方式实现软件的商业逻辑。
8.可用性，性能设计。
9.主人感。
10.paas（平台即服务），saas，amazon，google，
11.vps（虚拟专用服务器）
12.一专多长（寿司之神，小野二郎），围绕商业目标，关注用户体验
13.独立完成一个产品模型，可以用最快的速度测试自己的想法：发现问题，洞察需求，设计解决
14.DONE IS BETTER THAN PERFECT
15.大巧若拙，隐而不露即艺术
16.wordpress主题设计，app开发，网站开发，facebook,github,twitter,v2ex,
17.MEAN: MongDB,Express,AngularJS,Node.js  LAMP:Linux,Apache,MySQL,Php
18.网站：stackoverflow，拉勾网，
19.制作规范
20.压缩源码和图片，选择合适的图片，合并静态资源，开启服务器端gzip压缩，使用cdn，延长静态资源的缓存事件，吧css放头部，吧js放尾部
21.http协议
22.技术，成长，声望
23.优化缓存，向移动端转型
24.初级工程师：浏览器兼容，html／css／js语法和原理的理解，编辑器和插件的熟悉程度，对调试工具的了解程度，对版本管理软件的熟悉和应用经验，对前后端库／框架的使用，标准／规范
中级：对代码质量／代码规范的理解，对js单元测试的熟悉，对性能优化的应用和理解，对seo的应用和理解，代码部署，移动web
高级：代码架构，安全，对自动化测试的理解
25.行动重于计划
26.持续集成：版本控制，包管理，依赖关系，架构优化，自动化发布
  26.1:svn，git，github：鼓励频繁提交
  26.2:npm，node.js，谷歌前端开发套件：bower（包管理） yo（脚手架工具），grunt（构建工具）
  26.3:构建工具，逆向工程，良好架构，make，grunt，gulp
27.计算机架构师，系统设计者，语言设计者，编译器设计者
28.v8引擎，编译型语言，脚本语言
29.学习linux
30.设计模式：创建型模式，结构型模式，行为模式。架构模式：mvc
31.跨界，动手
32.产品满足用户需求，页面加载速度，响应速度，交互逻辑，稳定性
33.当我们知道一个东西的名字，就会在看到这个东西的时候，立马意识到它
34.设计感其实是基于科学的艺术
35.设计工具：ps，fw，axure，sketch，quartz composer
36.学一点管理
书籍：《众妙之门：网站重新设计之道》，《响应式web设计全流程解析》，《大众软件》，《重来》，《精益创业》，《禅意花园》，《网页重构》
，《超越css》《css mastery》《写给大家看的设计书》《编程之美》《你就是极客》《代码整洁之道》《图解http》《高性能网站建设指南》
《网站性能监测与优化》《精通css，高级web标准解决方案》《单页web应用，js从全端到后端》《Getting Real》
《从0到1:开启商业与未来的秘密》《Building iPhone Apps with HTML,CSS and JacaScript》
《git》《progit》《代码大全》《代码未来》《禅与摩托车维修艺术》《linux鸟哥私房菜》《只是为了好玩，linux之父林纳斯自传》
《设计模式》《javascript设计模式》《软件随想录》《卓有成效的程序员》《写给大家看的设计书：实例与创意》《netflix文化：自由与责任》
《卓有成效的管理者》《麦肯锡教我的写作武器》《金字塔原理》《安静：内向性格的竞争力》
