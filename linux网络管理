1.网络基础
      1.1 iso/osi七层模型:
            1.1.1 iso：国际标准化组织
                  osi：开放系统互联模型
                  ios:在计算机网络中，ios是互联网操作系统，是思科为其网络设备开发的操作维护系统
            osi:七层模型:更好的管理数据和处理错误,通过应用层传到物理层。接收从物理层传到应用层。
              1.1 上三层：只要和用户提供服务就要使用
              1.2 下四层：实际进行数据处理
              1.3 0110  1，0：比特
              1:物理层：最接近数据传输 比特
                1.1 负责设备之间的比特流的传输，物理接口，电气特性。视频借口，网卡
              2.数据链路层：帧:网卡，MAC地址
                2.1 成帧，用MAC地址访问媒介(找到发件人和收件人），错误检测和修正（传错了可以要求数据包重传）
              3.网络层：报文：ip地址
                3.1 提供逻辑地址（收件人ip，发件人ip），选路：发件人到收件人有多条路径，自动选用那条路径
              4.传输层：TPDU/段：传输协议数据单位
                4.1 TCP：可靠， UDP：快，可能不可靠  传输前错误检测和流控
                通过ip找到服务器，通过端口确定计算机的端口服务，
                  4.1.1 网页服务：80
                        mail：25100
                        ftp：21
              5.会话层：SPDU：会话协议数据单位
                5.1 对应用会话的管理和同步。
              6.表示层:PPDU：
                6.1 数据的表现形式，特定功能的实现-加密。
                  6.1.1 把你的数据翻译，解码，才能正常使用 
                      6.1.1.1 英文：ASCII
                              中文：GB2312
                              JPG：
                              MP3：
                  6.1.2 加密之后写入文件配置文件，如果重装之后就再也打不开了
              7.应用层：最接近用户 APDU
              
          例子：
            打开mail.163.com 进入应用层
            写邮件点击发送传递给表示层,开始翻译你的文字图片
            传递给会话层：它会判断是否要进行网络传输
            如果是文件等，就传给传输层
            写入邮件的端口号等等的，TCP协议，确定发送的端口号和接受的端口号
            数据传输到网络层：把发件的ip地址确定，选路
            MAC查找发送和接受
            物理层接收：
          
      1.2 TCP/IP四层模型：在七层模型上的一个演化
          1.2.1
            1.2.1.1
                应用层，
                  为用户提供各种服务：FTP，Telnet，DNS，SMTP
            1.2.1.2
                传输层，对应于传输层：传输控制协议（TCP）：可靠的面向链接协议，用户数据报协议（UDP）：不可靠的面向无链接协议
                TCP，网络链接，邮件：发送三次确认对方是否存在，然后在发送的过程中始终存在交互，发错了，会发送信息说你发错了，再来一份。
                UDP，qq：不管你在不在，我就发给你，可能不可靠。
                TCP/IP：三次握手协议
            1.2.1.3
                国际互联层，对应与网络层：网际地址（ip），互联网组管理协议（IGMP），互联网控制报文协议（ICMP PING）
                ping + ip ：通过ICMP协议发送，如果收到回应就证明两个人的网络是通的
            1.2.1.4
                网络接口层：arp协议，将ip翻译成网卡
                      网线-网卡-交换机-
                      局域网中：通过MAC确认发送
            实际的协议用到四层模型
            
            数据封装过程：应用数据     字节流
                          应用层        ftp头，数据
                          传输层        TCP头，ftp头，数据
                          网络层        IP头，TCP头，ftp头，数据
                          数据链路层    以太帧头，IP头，TCP头，ftp头，数据
                          IP数据报： 以太帧头，源地址，包类型，包数据，CRC
            数据的解封过程：
                        与以上相反
            TCP/IP 与 OSI模型：都支持面向链接和无链接的通信服务机制，都参考了层次结构
                                不同： 7和4
                                      对可靠性的要求不同
                                      osi模型在协议开发前设计的，TCP/Ip模型是先有协议再建立模型，不适用于非TCP/IP网络。
                                      实际应用不同，osi是理论的，TCP/IP已经成为国际标准了。
      1.3 IP地址
        IP包头
        32位 00000000.00000000.00000000.00000000
             11111111.11111111.11111111.11111111
             0.0.0.0  到 255.255.255.255
            1.3.1 IP:分为ABCDE五大类，DE不对民营组织开放
                  第一位数：1-126 A类
                            128-191 B类
                            192-223 C类
                      私网ip：免费使用，有效保护公网ip，
                      私网ip不能直接访问公网ip，要转换。但是有效的节约了ip资源。
                  A类：最大网络数：2^7-2  最大主机数：2^24-2 似有ip范围：10.0.0.0.0--10.255.255.255 ip地址范围：1.0.0.0--126.255.255.255
                      第一位数不同：不同网络，要用路由器来通信。
                      后面三个数：同一个网络中的不同主机数，同一网络中的主机用交换机就可以直接通信
                  B类：最大网络数:2^14 最大主机数:2^16-2 私有ip地址范围：172.16.0.0--172.31.255.255  ip地址范围：128.0.0.0--191.255.255.255
                      前两个数代表不同网段：
                      后两个数代表同一个网段中的不同主机：
                  C类：最大网络数：2^21 最大主机数：2^8-2 私有ip地址范围：192.168.0.0--192.168.255.255 ip地址范围：192.0.0.0--223.255.255.255
                      前三个数代表不同网段
                      后一个数代表同一个网段中的不同主机：
      1.4 子网掩码：用来确定ip地址中哪一个数变化代表不同的网段，哪一个数变化代表不同的主机
                唯一的规则：不一定只有以下三个，只是以下三个是标准的
                            只要所有的1是连续的就可以了
        1.4.1:标准，和ip一块看
          255.0.0.0       255.255.0.0   255.255.255.0
          ip+子网掩码同时使用。
        A类ip
          1.4.1.1
          ip       子网掩码
          10.      255.  对应ip第一位，只要发生变化就是不同的网段
          1.1.200  0.0.0 对应ip后三位，主机不同
          每个ip都有一个网络地址：对应第一个ip的网络地址： 10.0.0.0
        B类子网掩码
          172.16.  1.200
          255.255. 0.0
          172.16.  0.0
        C类子网掩码
          192.168.1 200
          255.255.255. 0
          192.168.1.   0
          
        不管是A，B，C类ip地址，其哪位数字决定是不同网段，哪位数字绝对是不同的主机和子网掩码有关
        如果B类ip配了一个C类的子网掩码，那么其数字位数变化遵照C类标准
        
        算网络地址： 只要把ip地址和子网掩码换算成2进制，然后按位与就是网络地址
          广播地址：  子网掩码对应主机，有多少位二进制，就把ip地址的多少位换成1，
          example:
                  ip: 10101100 00010000 00000010 01111001
            子网掩码: 11111111 11111111 11111111 00000000
            网络地址: 10101100 00010000 00000010 01111001
            广播地址: 10101100 00010000 00000010 11111111
            起始ip：  网络地址： 172.16.2.0
                      主机地址： 172.16.2.1 -172.16.2.254
            终止ip：  广播地址： 172.16.2.255
      1.5 端口作用
        1.5.1
          传输层：确定tcp/udp协议 ，发送和接收端口  出错检查和流量控制
            端口号是什么：计算机收件人，通过ip确定对方服务器的位置，确定要访问的服务是什么，也就是对对方服务器上开启的
                          端口决定要访问的服务的端口。
                          网页服务端口号：80  一般固定，要不别人不知道
                    分类：
              常见端口号：
              TCP协议包头：16源端口，16目的端口：0-2^16个，源：发送端口，目的：接受端口。
              UDP协议包头：16源，16目的:0-2^16个
              端口大于10000：是自己写的，自己写的只要不和现有的冲突就可以了
              10000以内的给系统用的，10000以上的给自己
              
        1.5.2
          常见端口号：不再标识是TCP或者是UDP端口
            ftp协议（文件传输协议）：端口号20 21
            SSH协议（安全shell协议）：端口号 22  linux和windows用
            telnet（远程登录协议）：端口号 23   明文传递，只要截获就可看
            DNS（域名系统）：端口号53  域名解析，既是TCP也是UDP协议
            http（超文本传输协议）：端口号 80  网页传输协议
            SMTP（简单邮件传输协议）：端口号 25 发邮件
            POP3（邮局协议3代）：端口号110 收信
        1.5.3:查看本机启用的端口
          netstat -an
            -a：查看所有链接和监听的端口
            -n：显示ip地址和端口号，而不显示域名和服务名
            显示本地开了那些端口，远程有谁和我发生链接
            如果我是发起端口，链接别人的服务，我的端口是随机的
            如果我是被链接端口，别人连接我，那么我的端口是固定的
            状态：LISTEN被监听，开启了本机服务，ESTABLISHED:存在链接，一直再链接
                  CLOSE_WAIT TIME_WAIT:超时命令
            UDP:没有状态，只发出消息，不需要监听，TCP三次握手
            查看对方的ip：把本地网页什么的服务全部关掉，然后登陆游戏，再查看ip，就是对方的ip了
      1.6 DNS作用
        1.6.1
          不配置DNS使不能访问互联网的
          名称解析：   ip地址进行通信
                       DNS:负责将域名翻译成ip
                            将ip翻译成域名，让人和计算机都能找到其习惯的方式
                      DNS之前hosts：静态ip对应，优先dns，如果hosts没有ip会去公网上找ip，hosts优先级大于dns
                      hosts：太冗余，解析太慢，主机维护困难
                      dns：层次性，分布式。
                      客户机   DNS服务器  WEB服务器
                      向dns服务器发送请求，dns发送给客户机ip，然后就访问web服务器
            域名空间结构：完全合格域名
            "." :根域名，分割管理
            顶级域（一级域）：
                  组织域名：edu ,gov,com,org,mil,cn
                  国家和地区域名：cn,jp,uk,au,hk
            欧洲黑山的一级域：.me
            二级域名:
                  com:
                        花钱买的：imooc,microsoft,IBM
            三级域名：购买了二级域名之后自己规定
            
            一级域名+二级域名+三级域名：完整域名，全球唯一的
            根域名只负责管理一级域名，一级域名只负责管理二级域名，二级域名只负责管理三级域名,有利于管理和排错，
            同osi七层协议还有TCP/IP四层协议一样的，一层连接着一层，分层次好管理和排错
      防钓鱼网站：
            dns的解析被劫持的可能性非常小
            二级域名和一级域名是相同的就基本是对的
      dns查询过程：
            DNS客户机（询问）   本地域名服务器（曾经问过，会缓存三天，第一次会询问根dns）
            根DNS服务器(全球的13台根dns服务器）   cn com.cn  imooc.com.cn   www.imooc.com.cn
      本地域名服务器和其他dns服务器查询：迭代查询，不一定完全正确的结果，而是近似的结果，
      递归查询：客户机和本地dns服务器的：要么返回正确结果要么范围查询错误
      查询内容：
            正向查询：从域名查找ip地址
            反向查询：从ip地址查找域名
      1.7 网关作用：具有路由功能的：路由求，服务器
            网页连接器，协议转换器
            MAC：地址是低级的，用于局域网交换数据，就是两台电脑一个插交换机的一个接口，
            同一网关，发送数据包，告知MAC地址，就能传数据
            路由求：实现在不同网关之间交换数据
            层层网关：一级网关有下一级网关，通过网关层层传递数据包
            内网ip：免费，公用，内网ip访问其他内网i
            内网ip 转换成 公网ip  再转换为内网i：实现通信
            要想访问公网：要有网关将数据包翻译成ip。要有dns把域名请求翻译成ip
2.Linux网络配置
      1.配置ip地址
            1.1
                  1.1.1 ifconfig命令临时配置ip地址
                        1.1.1.1
                              lo：不插网线也能使用
                              eth0：网卡1
                              eth1：网卡2
                        查看已经生效的ip
                        查看与配置网络命令
                        ifconfig eth0 192.168.254.200 netmask:255.255.255.0 临时配置ip地址和子网掩码
                        
                  1.1.2 setup工具永久配置ip地址  在centos7和ubuntu现在是 nmtui 
                        配置之后，写入 service network restart 使得ip生效
                  1.1.3 修改网络配置文件
                        直接修改配置文件
                               vi /etc/sysconfig/network-scripts/ifcfg-eth0 查看网卡配置文件
                               
                        配置主机名：
                              vi /etc/sysconfig/network
                              hostname imooc 临时设置主机名
                        dns配置文件：
                              vi /etc/resolv.conf
                              nameserver 202.106.0.20:
                              
                  1.1.4 图形界面配置ip地址
            1.2
                  有人搭建了DHCP服务器了，就可以自动获取ip地址。
      2.网络配置文件
            1.ifconfig 查看网络配置文件
            2.ifdown 网卡设备名：禁用该网卡
            3.ifup 网卡设备名 开启该网卡
            4.netstat 选项 查询网路状态
                  -t:列出TCP协议端口
                  -u:列出UDP协议端口
                  -n：不使用域名与服务名，而使用IP地址和端口号
                  -l：仅列出在监听状态网络服务
                  -a：列出所有的网络链接
            状态：
                  LISTEN：
                  ESTABLISH：有多少个链接到我的服务
            netstat -an | grep ESTABLISHED | wc -l 查找和统计
            netstat -rn 
            route -n 查询路由列表   
            route add default gw 192.168.0.1
            route del default gw 192.168.0.2
            nslookup:翻译路由对应的ip
                  可以看到我设置的ip
            ping 192.168.0.253/域名 
                  查看与ip/域名的链接状态，
                  ping -c 3   ping三次
            telnet 域名或ip 端口 远程管理与端口探测命令
                  telnet 192.168.0.252 80 虽然不做传递数据包，但是可以探测端口，测试是不是可以连到对方端口
            traceroute www.imooc.com:查看有那些路由线路,路由追踪，查看那些线路是通的，错误在那个节点
            wget 下载命令
            tcpdump -i eth0 -nnX port 21 :抓包协议，网卡，抓那个端口,ftp服务也是明文传递
                  -i:指定网卡
                  -nn:将数据包中的域名与服务转为ip和端口
                  -X:以十六进制和ASCII码显示数据包内容
                  port：指定监听端口
      3.虚拟机网络参数
3.Llinux网络命令
4.远程登陆  基于SSH协议的三个工具，加密，比telnet和ftp传输协议要安全
      1.SSH协议原理
            1.1   对称加密算法
                  加密和解密用同一个密钥，现在基本上是用的对称加密，多个账户用同一个密码会有安全隐患
            1.2   非对称加密算法
                  保护发送端的安全：不会告知发送端的信息。      
                        A密码+加密工具->生成一个公钥，一个私钥，
                        发送文件给B，拿B的公钥和自己的公钥加密，B通过自己的私钥和密码解密
                  对于生产服务器端有作用
            1.3   SSH安全外壳协议，由非对称加密算法演变而来，保护数据传递过程的安全
                  更加安全的管理远程协议。
            1.4 命令
                  ssh root@192.168.0.253 使用root用户管理ip为192.168.0.253的客户端
                  ssh 用户名@192.168.0.253 以当前登录用户管理...
                  提示是否下载对方的公钥，然后公钥保存在家目录下 .ssh文件
                  exit 退出
            1.5   如果传递目录：-r,文件不加
                  scp [-r] 用户名@ip:文件路径 本地路径  下载文件
                  scp [-r] 本地文件 用户名@ip:上传路径
                  scp abc root@192.168.0.253:/root
                  scp -r root@192.168.0.253:/root/abc /root
      2.SecureCRT远程管理工具
            windows不支持ssh协议的，但是就因为如此才出现了很多的第三方工具
            SecureCRT：用户windows与linux互联接
      3.Xshell工具和WinSCP文件传输工具
            Xshell：实现远程控制。  
            WinSCP：用户windows想linux传文件

